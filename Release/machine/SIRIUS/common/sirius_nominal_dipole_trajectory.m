function x_mat = sirius_nominal_dipole_trajectory(dipole_famname)

global THERING

if strcmpi(dipole_famname, 'B')
    s_step = 0.1/1000;
    s_max = 742.1/1000;
%     x0 = 9.1013/1000;
    x_ref = 28.255/1000;
%     p0 = [0;9.1013]/1000;
    data = sirius_bo_family_data(THERING);
    idx = data.B.ATIndex(1,:); % first dipole
    idx = idx(length(idx)/2+1:end); % z>0 half dipole
    ang = getcellstruct(THERING, 'BendingAngle', idx);
    fname = 'trajectory-';
elseif strcmpi(dipole_famname, 'B1')
    s_step = 0.05/1000;
    s_max = 800/1000;
%     x0 = 8.527/1000;
    x_ref = 13.689/1000;
    data = sirius_si_family_data(THERING);
    idx = data.B1.ATIndex(1,:); % first dipole
    idx = idx(length(idx)/2+1:end); % z>0 half dipole
    % average for all measured B1 dipoles:
    ang = (pi/180.0) * [0.00633024, 0.00950963, 0.01592232, 0.01602988, 0.01611366, 0.03235598, 0.12963280, 0.48382085, 0.32246854, 0.16165451, 0.10509159, 0.03413683, 0.03295890, 0.00773598, 0.00388829]';
    fname = 'trajectory-b1-';
elseif strcmpi(dipole_famname, 'B2')
    s_step = 0.1/1000;
    s_max = 1200/1000;
%     x0 = 8.153/1000;
    x_ref = 19.428/1000;
    data = sirius_si_family_data(THERING);
    idx = data.B2.ATIndex(1,:); % first dipole
    idx = idx(length(idx)/2+1:end); % z>0 half dipole
    % average for all measured B2 dipoles:
    ang = (pi/180.0) * [0.40623207, 0.17963415, 0.03260439, 0.01623988, 0.01618634, 0.01615890, 0.01618220, 0.03253671, 0.03269244, 0.57072732, 0.57033927, 0.06315500, 0.02719024, 0.02866488, 0.01993524, 0.01188171, 0.00444341, 0.00339585]';
    fname = 'trajectory-b2-';
elseif strcmpi(dipole_famname, 'BC')
    s_step = 0.05/1000;
    s_max = 1000/1000;
    % x_ref = 7.715119/1000;
    x_ref = 7.7030/1000;
    data = sirius_si_family_data(THERING);
    idx = data.BC.ATIndex(1,:); % first dipole
    idx = idx(length(idx)/2+1:end); % z>0 half dipole
    % average for all measured B2 dipoles:
    ang_medio = (pi/180.0)*[0.018772368421053,0.073281315789474,0.08148552631579,0.069143684210526,0.05971552631579,0.098141578947369,0.075676578947369,0.057552368421053,0.045443684210526,0.118870526315789,0.097199473684211,0.621605,0.622743157894737,0.042494473684211,0.033393157894737,0.019346052631579,0.01343552631579]';
    ang_bc2 = (pi/180.0)*[0.018795,0.073375,0.08161,0.06927,0.059835,0.09836,0.075865,0.05768,0.04548,0.11854,0.096675,0.62298,0.62356,0.04257,0.03352,0.01939,0.010795]';
    ang_bc3 = (pi/180.0)*[0.018775,0.0733,0.081545,0.06922,0.05979,0.098275,0.075815,0.05774,0.04569,0.11957,0.097795,0.62208,0.62201,0.0423,0.033225,0.019265,0.011905]';
    ang_bc4 = (pi/180.0)*[0.018805,0.0734,0.08162,0.069265,0.059825,0.098335,0.075855,0.05775,0.045685,0.11972,0.097845,0.621325,0.622265,0.04243,0.033345,0.019305,0.011525]';
    ang_bc5 = (pi/180.0)*[0.01876,0.07323,0.08147,0.06917,0.05975,0.09822,0.075765,0.05767,0.04558,0.11915,0.097375,0.621445,0.622215,0.042475,0.033455,0.019385,0.013185]';
    ang_bc6 = (pi/180.0)*[0.018775,0.073305,0.081545,0.0692,0.05975,0.09816,0.075655,0.05751,0.0454,0.11877,0.097265,0.62078,0.62289,0.04252,0.03344,0.0194,0.013935]';
    ang_bc7 = (pi/180.0)*[0.018735,0.073135,0.08133,0.06902,0.05961,0.097975,0.07555,0.05744,0.045325,0.11861,0.097365,0.62193,0.622615,0.04243,0.03332,0.01934,0.01457]';
    ang_bc8 = (pi/180.0)*[0.018705,0.073075,0.08139,0.06907,0.05965,0.098055,0.075655,0.0576,0.045565,0.119385,0.097715,0.621,0.622505,0.042475,0.0333,0.01929,0.013865]';
    ang_bc9 = (pi/180.0)*[0.018725,0.0731,0.08127,0.068955,0.059555,0.097895,0.075515,0.057475,0.04544,0.118985,0.09729,0.622225,0.62284,0.042455,0.03336,0.01934,0.013875]';
    ang_bc10 = (pi/180.0)*[0.01882,0.07345,0.08165,0.06928,0.059825,0.0983,0.075795,0.057675,0.04558,0.11903,0.09687,0.620655,0.62306,0.04255,0.03333,0.01926,0.01317]';
    ang_bc11 = (pi/180.0)*[0.018735,0.07316,0.08138,0.069065,0.059645,0.09803,0.07558,0.057465,0.04536,0.119075,0.09805,0.621575,0.62249,0.04243,0.033285,0.01928,0.013695]';
    ang_bc12 = (pi/180.0)*[0.01876,0.073245,0.08148,0.069135,0.05971,0.098145,0.07568,0.057515,0.04533,0.11836,0.096875,0.62163,0.6234,0.04253,0.03338,0.01933,0.013795]';
    ang_bc13 = (pi/180.0)*[0.01881,0.073435,0.0816,0.069185,0.05973,0.098135,0.075645,0.05751,0.04545,0.119365,0.097685,0.620965,0.62212,0.0424,0.03321,0.019215,0.01384]';
    ang_bc14 = (pi/180.0)*[0.01873,0.0731,0.081275,0.068975,0.059575,0.097915,0.075485,0.057345,0.04518,0.118045,0.096845,0.622415,0.623385,0.04257,0.033545,0.01948,0.014435]';
    ang_bc15 = (pi/180.0)*[0.018785,0.07331,0.08151,0.069165,0.059735,0.09817,0.07566,0.05747,0.045255,0.11804,0.096625,0.62201,0.62341,0.04252,0.03335,0.01932,0.013965]';
    ang_bc16 = (pi/180.0)*[0.018775,0.073305,0.0815,0.06914,0.059705,0.098095,0.075625,0.057515,0.04544,0.11885,0.096905,0.621535,0.62289,0.04258,0.033485,0.019385,0.01357]';
    ang_bc17 = (pi/180.0)*[0.018805,0.07338,0.081515,0.069155,0.05973,0.098165,0.075685,0.057545,0.045435,0.118785,0.096835,0.621415,0.62256,0.04255,0.033515,0.01942,0.013805]';
    ang_bc18 = (pi/180.0)*[0.018825,0.07347,0.08161,0.0692,0.05975,0.098175,0.07567,0.05751,0.045385,0.11873,0.09691,0.62156,0.622435,0.042555,0.03355,0.01944,0.013525]';
    ang_bc20 = (pi/180.0)*[0.01878,0.0733,0.08147,0.06913,0.05971,0.09813,0.075635,0.057435,0.045255,0.11847,0.09715,0.621605,0.623025,0.04251,0.03335,0.019315,0.01403]';
    ang_bc21 = (pi/180.0)*[0.018775,0.07327,0.081455,0.06913,0.059715,0.098155,0.07572,0.057645,0.045595,0.11906,0.096715,0.621365,0.622445,0.042545,0.033505,0.019415,0.01379]';
    ang = ang_medio;
    
    fname = 'trajectory-bc-';    
else
    error('Not implemented for accelerator other than BO.')
end

len = getcellstruct(THERING, 'Length', idx);
rho = len ./ ang;

% loop through segments of dipole model
s(1) = 0.0;
% p(:,1) = p0;
% p(:,1) = [0;8.153/1000];
p(:,1) = [0;79.0/1e6];
v(:,1) = [1;0];
r90 = [cos(pi/2), sin(pi/2); -sin(pi/2), cos(pi/2)];

for i=1:length(ang)
    u = r90 * v(:,end);
%     disp(u);
    n = -u * rho(i);
    o = p(:,end) - n; 
    np = ceil(len(i)/s_step);
%     disp(np);
    av = linspace(0,ang(i), np+1);
    v0 = v(:,end);
    s0 = s(end);
    for a=av(2:end)
        m = [cos(a), sin(a); -sin(a), cos(a)];
        nr = m * n;
        p(:,end+1) = o + nr;
        v(:,end+1) = m * v0;
        s(end+1) = s0 + a * rho(i);
    end
end

% finds segmodel x0 ans shifts radially
p1 = p(:,end);
p2 = p(:,end-1);
l0 = - p1(1)/(p2(1)-p1(1));
p0 = p1 + l0*(p2-p1);
x_ref_segmodel = x_ref - p0(2);
p(2,:) = p(2,:) + x_ref_segmodel;

% extrapolate straight line
while s(end) < s_max
    s(end+1) = s(end) + s_step;
    v(:,end+1) = v(:,end);
    p(:,end+1) = p(:,end) + v(:,end)*s_step;
end

fprintf('%f\n', 1000 * p(2,1))
plot(1000 * p(1,:), 1000 * p(2,:), 'o');

fp = fopen([fname, 'pos.txt'], 'w');
fprintf(fp, '# trajectory\n');
fprintf(fp, '# s[mm] rx[mm] ry[mm] rz[mm] px py pz\n');
for i=1:length(s)
    fprintf(fp, '%+.14e %+.14e %+.14e %+.14e %+.14e %+.14e %+.14e\n', 1e3*s(i), 1e3*p(2,i), 0.0, 1e3*p(1,i), v(2,i), 0.0, v(1,i));
end

fp = fopen([fname, 'neg.txt'], 'w');
fprintf(fp, '# trajectory\n');
fprintf(fp, '# s[mm] rx[mm] ry[mm] rz[mm] px py pz\n');
for i=1:length(s)
    fprintf(fp, '%+.14e %+.14e %+.14e %+.14e %+.14e %+.14e %+.14e\n', -1e3*s(i), 1e3*p(2,i), 0.0, -1e3*p(1,i), -v(2,i), 0.0, v(1,i));
end

x_mat = p0(2);

